// Code generated by protoc-gen-go. DO NOT EDIT.
// source: profile.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	profile.proto

It has these top-level messages:
	GetProfileRequest
	Profile
	WorkingHistory
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetProfileRequest struct {
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetProfileRequest) Reset()                    { *m = GetProfileRequest{} }
func (m *GetProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProfileRequest) ProtoMessage()               {}
func (*GetProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetProfileRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type Profile struct {
	UesrId           uint64            `protobuf:"varint,1,opt,name=uesr_id,json=uesrId" json:"uesr_id,omitempty"`
	Name             string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Location         string            `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	WorkingHistories []*WorkingHistory `protobuf:"bytes,4,rep,name=working_histories,json=workingHistories" json:"working_histories,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Profile) GetUesrId() uint64 {
	if m != nil {
		return m.UesrId
	}
	return 0
}

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Profile) GetWorkingHistories() []*WorkingHistory {
	if m != nil {
		return m.WorkingHistories
	}
	return nil
}

type WorkingHistory struct {
	Company string `protobuf:"bytes,1,opt,name=company" json:"company,omitempty"`
}

func (m *WorkingHistory) Reset()                    { *m = WorkingHistory{} }
func (m *WorkingHistory) String() string            { return proto.CompactTextString(m) }
func (*WorkingHistory) ProtoMessage()               {}
func (*WorkingHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WorkingHistory) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func init() {
	proto.RegisterType((*GetProfileRequest)(nil), "api.GetProfileRequest")
	proto.RegisterType((*Profile)(nil), "api.Profile")
	proto.RegisterType((*WorkingHistory)(nil), "api.WorkingHistory")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProfileService service

type ProfileServiceClient interface {
	Get(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
}

type profileServiceClient struct {
	cc *grpc.ClientConn
}

func NewProfileServiceClient(cc *grpc.ClientConn) ProfileServiceClient {
	return &profileServiceClient{cc}
}

func (c *profileServiceClient) Get(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := grpc.Invoke(ctx, "/api.ProfileService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProfileService service

type ProfileServiceServer interface {
	Get(context.Context, *GetProfileRequest) (*Profile, error)
}

func RegisterProfileServiceServer(s *grpc.Server, srv ProfileServiceServer) {
	s.RegisterService(&_ProfileService_serviceDesc, srv)
}

func _ProfileService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ProfileService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServiceServer).Get(ctx, req.(*GetProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ProfileService",
	HandlerType: (*ProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ProfileService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "profile.proto",
}

func init() { proto.RegisterFile("profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xd1, 0x4a, 0xf3, 0x30,
	0x14, 0xc7, 0xe9, 0x3a, 0xb6, 0x6f, 0xf9, 0x74, 0xb8, 0x08, 0xae, 0x16, 0xc1, 0xd2, 0xab, 0x22,
	0xd2, 0xc2, 0x7c, 0x01, 0xef, 0xe6, 0xc0, 0x0b, 0xa9, 0x17, 0xde, 0x39, 0x62, 0x7b, 0xac, 0x07,
	0xbb, 0x9c, 0x98, 0x64, 0x8e, 0x21, 0xde, 0xf8, 0x0a, 0xfa, 0x66, 0xbe, 0x82, 0x0f, 0x22, 0xa6,
	0x55, 0x1c, 0xde, 0xe5, 0xff, 0x3f, 0xbf, 0x70, 0x92, 0x1f, 0xdb, 0x56, 0x9a, 0x6e, 0xb1, 0x86,
	0x54, 0x69, 0xb2, 0xc4, 0x7d, 0xa1, 0x30, 0x3c, 0xa8, 0x88, 0xaa, 0x1a, 0x32, 0xa1, 0x30, 0x13,
	0x52, 0x92, 0x15, 0x16, 0x49, 0x9a, 0x06, 0x89, 0x8f, 0xd9, 0x68, 0x0a, 0xf6, 0xa2, 0xb9, 0x96,
	0xc3, 0xc3, 0x12, 0x8c, 0xe5, 0x63, 0xd6, 0x5f, 0x1a, 0xd0, 0x73, 0x2c, 0x03, 0x2f, 0xf2, 0x92,
	0x6e, 0xde, 0xfb, 0x8a, 0xb3, 0x32, 0x7e, 0xf3, 0x58, 0xbf, 0x65, 0x1d, 0x04, 0x66, 0x03, 0x02,
	0xa3, 0x67, 0x25, 0xe7, 0xac, 0x2b, 0xc5, 0x02, 0x82, 0x4e, 0xe4, 0x25, 0x83, 0xdc, 0x9d, 0x79,
	0xc8, 0xfe, 0xd5, 0x54, 0xb8, 0xcd, 0x81, 0xef, 0xfa, 0x9f, 0xcc, 0x4f, 0xd9, 0x68, 0x45, 0xfa,
	0x1e, 0x65, 0x35, 0xbf, 0x43, 0x63, 0x49, 0x23, 0x98, 0xa0, 0x1b, 0xf9, 0xc9, 0xff, 0xc9, 0x6e,
	0x2a, 0x14, 0xa6, 0x57, 0xcd, 0xf4, 0xcc, 0x0d, 0xd7, 0xf9, 0xce, 0xea, 0x77, 0x46, 0x30, 0xf1,
	0x11, 0x1b, 0x6e, 0x32, 0x3c, 0x60, 0xfd, 0x82, 0x16, 0x4a, 0xc8, 0xb5, 0x7b, 0xdc, 0x20, 0xff,
	0x8e, 0x93, 0x6b, 0x36, 0x6c, 0x7f, 0x70, 0x09, 0xfa, 0x11, 0x0b, 0xe0, 0xe7, 0xcc, 0x9f, 0x82,
	0xe5, 0x7b, 0x6e, 0xd7, 0x1f, 0x19, 0xe1, 0x96, 0xeb, 0xdb, 0x32, 0x3e, 0x7c, 0x79, 0xff, 0x78,
	0xed, 0xec, 0xf3, 0xb1, 0xf3, 0xd9, 0xea, 0x36, 0xd9, 0x53, 0xeb, 0xeb, 0xf9, 0xa6, 0xe7, 0xbc,
	0x9e, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x04, 0xa8, 0xed, 0x8b, 0x01, 0x00, 0x00,
}
